# hw definition file for MambaF405 hardware


# MCU class and specific type
MCU STM32F4xx STM32F405xx

# board ID for firmware load
APJ_BOARD_ID 125

# crystal frequency
OSCILLATOR_HZ 8000000

define STM32_ST_USE_TIMER 4
define CH_CFG_ST_RESOLUTION 16

FLASH_SIZE_KB 1024


# only one I2C bus
I2C_ORDER I2C1

# order of UARTs (and USB)
SERIAL_ORDER OTG1 USART1 USART3 USART6

# LEDs
PB5 LED_BLUE OUTPUT LOW GPIO(0)
PB4 LED_ORANGE OUTPUT LOW GPIO(1)

define HAL_GPIO_A_LED_PIN 0
define HAL_GPIO_B_LED_PIN 1

# buzzer
PA8 BUZZER OUTPUT GPIO(80) LOW
define HAL_BUZZER_PIN 80
define HAL_BUZZER_ON 1
define HAL_BUZZER_OFF 0

# spi1 bus for IMU
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1
PA4 MPU6000_CS CS

# spi2 for OSD
PB13 SPI2_SCK SPI2
PB14 SPI2_MISO SPI2
PB15 SPI2_MOSI SPI2
PB12 MAX7456_CS CS

# spi3 for onboard flash
PC10 SPI3_SCK SPI3
PC11 SPI3_MISO SPI3
PC12 SPI3_MOSI SPI3
PB3 FLASH_CS CS

# only one I2C bus
PB6 I2C1_SCL I2C1 PULLUP
PB7 I2C1_SDA I2C1 PULLUP

# analog pins
PC1 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PC2 RSSI_ADC_PIN ADC1 SCALE(1)
PC3 BATT_CURRENT_SENS ADC1 SCALE(1)

# define default battery setup
#todo figure out
# PC5 - ADC12_CH15
define HAL_BATT_VOLT_PIN 15
# PC4 - ADC12_CH14
define HAL_BATT_CURR_PIN 14
define HAL_BATT_VOLT_SCALE 10.1
define HAL_BATT_CURR_SCALE 17.0

#analog rssi pin (also could be used as analog airspeed input)
# PB1 - ADC12_CH9
define BOARD_RSSI_ANA_PIN 9

# USART1
PA9 USART1_TX USART1
PA10 USART1_RX USART1

# RC input using timer
#PA3 TIM9_CH2 TIM9 RCININT PULLDOWN

# alternative RC input using UART
#PA2 USART2_TX USART2 NODMA
#PA3 USART2_RX USART2 NODMA ALT(1)

# USART3
PB10 USART3_TX USART3
PB11 USART3_RX USART3

# UART4
#PA0 UART4_TX UART4
#PA1 UART4_RX UART4

# UART6
PC6 USART6_TX USART6
PC7 USART6_RX USART6

# USB
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

# USB detection
PC5 VBUS INPUT OPENDRAIN

# debug (disabled out to allow for both LEDs)
#PA13 JTMS-SWDIO SWD
#PA14 JTCK-SWCLK SWD

# PWM out pins. Note that channel order follows the ArduPilot motor
# order conventions
PA3  TIM2_CH4 TIM2 PWM(1) GPIO(50)
PB0  TIM3_CH3 TIM3 PWM(2) GPIO(51)
PB1  TIM1_CH3N TIM1 PWM(3) GPIO(52)
PA2  TIM2_CH3 TIM2 PWM(4) GPIO(53)

define HAL_STORAGE_SIZE 15360
define STORAGE_FLASH_PAGE 2

# reserve 32k for bootloader and 32k for flash storage
FLASH_RESERVE_START_KB 64

# No baro onboard
define HAL_PROBE_EXTERNAL_I2C_BAROS
define HAL_BARO_ALLOW_INIT_NO_BARO

# no built-in compass, but probe the i2c bus for all possible
# external compass types
define ALLOW_ARM_NO_COMPASS
define HAL_COMPASS_DEFAULT HAL_COMPASS_NONE
define HAL_PROBE_EXTERNAL_I2C_COMPASSES
define HAL_I2C_INTERNAL_MASK 0
define HAL_COMPASS_AUTO_ROT_DEFAULT 2

# SPI devices
SPIDEV mpu6000   SPI1 DEVID1 MPU6000_CS MODE3 1*MHZ  8*MHZ 
SPIDEV osd       SPI2 DEVID1 MAX7456_CS MODE0 10*MHZ 10*MHZ
SPIDEV dataflash SPI3 DEVID1 FLASH_CS   MODE0 32*MHZ 32*MHZ

# one IMU
IMU Invensense SPI:mpu6000 ROTATION_NONE

# enable logging to dataflash
define HAL_LOGGING_DATAFLASH

# 4 PWM available
define BOARD_PWM_COUNT_DEFAULT 4

# setup for OSD
define OSD_ENABLED 1
define HAL_OSD_TYPE_DEFAULT 1
ROMFS_WILDCARD libraries/AP_OSD/fonts/font*.bin

# disable SMBUS and fuel battery monitors to save flash
define HAL_BATTMON_SMBUS_ENABLE 0
define HAL_BATTMON_FUEL_ENABLE 0

# disable parachute and sprayer to save flash
define HAL_PARACHUTE_ENABLED 0
define HAL_SPRAYER_ENABLED 0

#eliminate EKF2 to save flash size
define HAL_NAVEKF2_AVAILABLE 0

# reduce max size of embedded params for apj_tool.py
define AP_PARAM_MAX_EMBEDDED_PARAM 1024
